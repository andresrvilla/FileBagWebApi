// <auto-generated />
using System;
using FileBagWebApi.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FileBagWebApi.DataAccess.EntityFramework.Migrations
{
    [DbContext(typeof(FileBagContext))]
    partial class FileBagContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FileBagWebApi.Entities.Models.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(96)")
                        .HasMaxLength(96);

                    b.Property<byte>("RowStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("URI")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasAlternateKey("URI");

                    b.ToTable("Application","filebag");
                });

            modelBuilder.Entity("FileBagWebApi.Entities.Models.FileDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Contents")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("FileDetail","filebag");
                });

            modelBuilder.Entity("FileBagWebApi.Entities.Models.FileElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("AccessCount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ContentLength")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(96)")
                        .HasMaxLength(96);

                    b.Property<Guid?>("FileDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(96)")
                        .HasMaxLength(96);

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(96)")
                        .HasMaxLength(96);

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("FileDetailId");

                    b.ToTable("FileElement","filebag");
                });

            modelBuilder.Entity("FileBagWebApi.Entities.Models.FileElement", b =>
                {
                    b.HasOne("FileBagWebApi.Entities.Models.Application", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FileBagWebApi.Entities.Models.FileDetail", "FileDetail")
                        .WithMany()
                        .HasForeignKey("FileDetailId");
                });
#pragma warning restore 612, 618
        }
    }
}
